void splitfloat(float x, int* intpart, float* fracpart)
{
	*intpart = x / 1;
	*fracpart = x - *intpart;
}


void strmcpy(char* t, int m, char* s) {
	int i, j, len;
	strcpy(s, t);
	len = strlen(s);
	for (i = m - 1; i > 0; i--) {
		for (j = i; j < len; j++) {
			*(s + j - 1) = *(s + j);
		}
	}
	*(s + len - m + 1) = '\0';

}

bool palindrome(char* s)
{
	int len = strlen(s);
	int i = 0;
	int count = 0;
		for (i = 0; i < len / 2; i++)
		{
			if (s[i] == s[len - 1-i])
				count++;
		}
	if (count == len / 2)
		return true;
	else
		return false;

}

char* getmonth(int n)
{
	switch (n) {

	case 1:return "January";
	case 2:return "February";
	case 3:return "March";
	case 4:return "April";
	case 5:return "May";
	case 6:return "June";
	case 7:return "July";
	case 8:return "August";
	case 9:return "September";
	case 10:return "October";
	case 11:return "November";
	case 12:return "December";
	default:return NULL;

	}
}

char* search(char* s, char* t) {
	char* p = NULL;
	int i, j, k = 0, lens, lent;

	lens = strlen(s);
	lent = strlen(t);

	for (i = 0; i < lens; i++) {
		j = i;
		while (s[j] == t[k]) {
			k++;
			j++;
		}
		if (k >= lent) {  // k>=lent 才能满足   长度超过题面MAXS, t在结尾处  这个条件 
			p = &s[i];
			return p;
		}
		k = 0;
	}

	return p;
}

#include<stdio.h>
#include<string.h>
void main()
{
int i,ri,repeat;
char *date[]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
char str[80];
scanf("%d",&repeat);
getchar();
for(ri=1;ri<=repeat;ri++){
scanf("%s",str);
for( i=0;i<7;i++ )
if ( !strcmp( date[i] , str ) )
break ;
if ( i >= 7 )
printf("-1\n");
else
printf("%d\n" , i+1 );
}
}

# include <stdio.h>
# include <string.h>
int main()
{
	int i;
	char* color[5] = { "red","blue","yellow","green","black" }; //指针数组初始话
	char str[20];
	scanf("%s", str);
	for (i = 0; i < 5; i++)
		if (strcmp(str,color[i]) == 0)
			break;
	if (i < 5)
		printf("%d\n", i + 1);
	else
		printf("Not Found\n");

	return 0;
}